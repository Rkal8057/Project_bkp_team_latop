// <auto-generated />
using System;
using DB.Login;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Login.Migrations
{
    [DbContext(typeof(loginDBContext))]
    [Migration("20240104091516_login_db_v_101")]
    partial class login_db_v_101
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<decimal?>("approx_amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("approx_amount")
                        .HasColumnOrder(3);

                    b.Property<int?>("approx_days")
                        .HasColumnType("int")
                        .HasColumnName("approx_days")
                        .HasColumnOrder(4);

                    b.Property<long?>("service_id")
                        .HasColumnType("bigint")
                        .HasColumnName("service_id")
                        .HasColumnOrder(5);

                    b.Property<string>("service_type")
                        .HasColumnType("text")
                        .HasColumnName("service_type")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.HasIndex("service_id");

                    b.ToTable("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CheckListMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id")
                        .HasColumnOrder(4);

                    b.Property<string>("document_required_name")
                        .HasColumnType("text")
                        .HasColumnName("document_required_name")
                        .HasColumnOrder(2);

                    b.Property<string>("document_required_type")
                        .HasColumnType("text")
                        .HasColumnName("document_required_type")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("CheckListMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CorrespondenceRequest", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("company_name")
                        .HasColumnType("text")
                        .HasColumnName("company_name")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("current_date")
                        .HasColumnType("date")
                        .HasColumnName("current_date")
                        .HasColumnOrder(11);

                    b.Property<string>("purpose")
                        .HasColumnType("text")
                        .HasColumnName("purpose")
                        .HasColumnOrder(6);

                    b.Property<string>("reject_yn")
                        .HasColumnType("text")
                        .HasColumnName("reject_yn")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("reply_date")
                        .HasColumnType("date")
                        .HasColumnName("reply_date")
                        .HasColumnOrder(3);

                    b.Property<string>("sender_email")
                        .HasColumnType("text")
                        .HasColumnName("sender_email")
                        .HasColumnOrder(8);

                    b.Property<long?>("sender_mobile")
                        .HasColumnType("bigint")
                        .HasColumnName("sender_mobile")
                        .HasColumnOrder(9);

                    b.Property<string>("sender_name")
                        .HasColumnType("text")
                        .HasColumnName("sender_name")
                        .HasColumnOrder(7);

                    b.Property<string>("status")
                        .HasColumnType("text")
                        .HasColumnName("status")
                        .HasColumnOrder(10);

                    b.Property<string>("work_category")
                        .HasColumnType("text")
                        .HasColumnName("work_category")
                        .HasColumnOrder(5);

                    b.HasKey("id");

                    b.ToTable("CorrespondenceRequest");
                });

            modelBuilder.Entity("DB.Login.Tables.GeneralRequestedDetail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasColumnOrder(7);

                    b.Property<long?>("service_id")
                        .HasColumnType("bigint")
                        .HasColumnName("service_id")
                        .HasColumnOrder(3);

                    b.Property<string>("status")
                        .HasColumnType("text")
                        .HasColumnName("status")
                        .HasColumnOrder(6);

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.HasIndex("service_id");

                    b.ToTable("GeneralRequestedDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.ProcessRequestDetail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("general_requested_detail_id")
                        .HasColumnType("bigint")
                        .HasColumnName("general_requested_detail_id")
                        .HasColumnOrder(4);

                    b.Property<string>("required_info")
                        .HasColumnType("text")
                        .HasColumnName("required_info")
                        .HasColumnOrder(2);

                    b.Property<string>("required_info_data")
                        .HasColumnType("text")
                        .HasColumnName("required_info_data")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.HasIndex("general_requested_detail_id");

                    b.ToTable("ProcessRequestDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.ServiceMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("service_name")
                        .HasColumnType("text")
                        .HasColumnName("service_name")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.ToTable("ServiceMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.ServiceMaster", "ServiceMaster")
                        .WithMany("CategoryMaster")
                        .HasForeignKey("service_id");

                    b.Navigation("ServiceMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CheckListMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.CategoryMaster", "CategoryMaster")
                        .WithMany("CheckListMaster")
                        .HasForeignKey("category_id");

                    b.Navigation("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.GeneralRequestedDetail", b =>
                {
                    b.HasOne("DB.Login.Tables.CategoryMaster", "CategoryMaster")
                        .WithMany()
                        .HasForeignKey("category_id");

                    b.HasOne("DB.Login.Tables.ServiceMaster", "ServiceMaster")
                        .WithMany("GeneralRequestedDetails")
                        .HasForeignKey("service_id");

                    b.Navigation("CategoryMaster");

                    b.Navigation("ServiceMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProcessRequestDetail", b =>
                {
                    b.HasOne("DB.Login.Tables.GeneralRequestedDetail", "GeneralRequestedDetail")
                        .WithMany("ProcessRequestDetail")
                        .HasForeignKey("general_requested_detail_id");

                    b.Navigation("GeneralRequestedDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.Navigation("CheckListMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.GeneralRequestedDetail", b =>
                {
                    b.Navigation("ProcessRequestDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.ServiceMaster", b =>
                {
                    b.Navigation("CategoryMaster");

                    b.Navigation("GeneralRequestedDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
