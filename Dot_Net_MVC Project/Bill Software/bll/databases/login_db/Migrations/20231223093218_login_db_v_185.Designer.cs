// <auto-generated />
using System;
using DB.Login;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Login.Migrations
{
    [DbContext(typeof(loginDBContext))]
    [Migration("20231223093218_login_db_v_185")]
    partial class login_db_v_185
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<ulong?>("active")
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasColumnOrder(3);

                    b.Property<string>("category_name")
                        .HasColumnType("text")
                        .HasColumnName("category_name")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasColumnOrder(4);

                    b.Property<ulong?>("delete_at")
                        .HasColumnType("bit")
                        .HasColumnName("delete_at")
                        .HasColumnOrder(5);

                    b.HasKey("id");

                    b.ToTable("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ItemMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<ulong?>("active")
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasColumnOrder(6);

                    b.Property<long?>("category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasColumnOrder(7);

                    b.Property<ulong?>("delete_at")
                        .HasColumnType("bit")
                        .HasColumnName("delete_at")
                        .HasColumnOrder(8);

                    b.Property<long?>("item_amount")
                        .HasColumnType("bigint")
                        .HasColumnName("item_amount")
                        .HasColumnOrder(5);

                    b.Property<string>("item_name")
                        .HasColumnType("text")
                        .HasColumnName("item_name")
                        .HasColumnOrder(2);

                    b.Property<string>("item_type")
                        .HasColumnType("text")
                        .HasColumnName("item_type")
                        .HasColumnOrder(4);

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("ItemMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.PartyMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("address")
                        .HasColumnType("text")
                        .HasColumnName("address")
                        .HasColumnOrder(3);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(5);

                    b.Property<long?>("mobile_number")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile_number")
                        .HasColumnOrder(4);

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<long?>("pincode")
                        .HasColumnType("bigint")
                        .HasColumnName("pincode")
                        .HasColumnOrder(6);

                    b.HasKey("id");

                    b.ToTable("PartyMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SalesMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("PartyMasterid")
                        .HasColumnType("bigint");

                    b.Property<string>("address")
                        .HasColumnType("text")
                        .HasColumnName("address")
                        .HasColumnOrder(5);

                    b.Property<string>("completion_flag")
                        .HasColumnType("text")
                        .HasColumnName("completion_flag")
                        .HasColumnOrder(7);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(4);

                    b.Property<decimal?>("grand_total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("grand_total")
                        .HasColumnOrder(8);

                    b.Property<long>("mobile_number")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile_number")
                        .HasColumnOrder(6);

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("sales_date")
                        .HasColumnType("datetime")
                        .HasColumnName("sales_date")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.HasIndex("PartyMasterid");

                    b.ToTable("SalesMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SalesTrxMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount")
                        .HasColumnOrder(7);

                    b.Property<string>("item_name")
                        .HasColumnType("text")
                        .HasColumnName("item_name")
                        .HasColumnOrder(3);

                    b.Property<long>("item_qty")
                        .HasColumnType("bigint")
                        .HasColumnName("item_qty")
                        .HasColumnOrder(4);

                    b.Property<decimal>("item_rate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("item_rate")
                        .HasColumnOrder(5);

                    b.Property<string>("item_type")
                        .HasColumnType("text")
                        .HasColumnName("item_type")
                        .HasColumnOrder(6);

                    b.Property<long>("sales_master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("sales_master_id")
                        .HasColumnOrder(8);

                    b.HasKey("id");

                    b.HasIndex("sales_master_id");

                    b.ToTable("SalesTrxMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ItemMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.CategoryMaster", "CategoryMaster")
                        .WithMany("ItemMaster")
                        .HasForeignKey("category_id");

                    b.Navigation("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SalesMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.PartyMaster", null)
                        .WithMany("SalesMaster")
                        .HasForeignKey("PartyMasterid");
                });

            modelBuilder.Entity("DB.Login.Tables.SalesTrxMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.SalesMaster", "SalesMaster")
                        .WithMany("SalesTrxMaster")
                        .HasForeignKey("sales_master_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.Navigation("ItemMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.PartyMaster", b =>
                {
                    b.Navigation("SalesMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SalesMaster", b =>
                {
                    b.Navigation("SalesTrxMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
