// <auto-generated />
using System;
using DB.Login;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Login.Migrations
{
    [DbContext(typeof(loginDBContext))]
    partial class loginDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DB.Login.Tables.AddToCartMaster", b =>
                {
                    b.Property<long>("add_to_cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("add_to_cart_id")
                        .HasColumnOrder(1);

                    b.Property<long?>("comp_id")
                        .HasColumnType("bigint")
                        .HasColumnName("comp_id")
                        .HasColumnOrder(3);

                    b.Property<string>("comp_name")
                        .HasColumnType("text")
                        .HasColumnName("comp_name")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(17);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(19);

                    b.Property<long?>("id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(2);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(16);

                    b.Property<string>("product_category")
                        .HasColumnType("text")
                        .HasColumnName("product_category")
                        .HasColumnOrder(6);

                    b.Property<long?>("product_category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_category_id")
                        .HasColumnOrder(5);

                    b.Property<decimal?>("product_commission_amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_commission_amt")
                        .HasColumnOrder(26);

                    b.Property<decimal?>("product_commission_percentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_commission_percentage")
                        .HasColumnOrder(25);

                    b.Property<string>("product_commission_received_in")
                        .HasColumnType("text")
                        .HasColumnName("product_commission_received_in")
                        .HasColumnOrder(24);

                    b.Property<decimal?>("product_del_price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_del_price")
                        .HasColumnOrder(12);

                    b.Property<string>("product_description")
                        .HasColumnType("text")
                        .HasColumnName("product_description")
                        .HasColumnOrder(10);

                    b.Property<decimal?>("product_points_earned")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_points_earned")
                        .HasColumnOrder(27);

                    b.Property<decimal?>("product_price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_price")
                        .HasColumnOrder(11);

                    b.Property<long?>("product_purchasing_price")
                        .HasColumnType("bigint")
                        .HasColumnName("product_purchasing_price")
                        .HasColumnOrder(23);

                    b.Property<string>("product_returnable")
                        .HasColumnType("text")
                        .HasColumnName("product_returnable")
                        .HasColumnOrder(28);

                    b.Property<long?>("product_status")
                        .HasColumnType("bigint")
                        .HasColumnName("product_status")
                        .HasColumnOrder(13);

                    b.Property<long?>("product_store_qty")
                        .HasColumnType("bigint")
                        .HasColumnName("product_store_qty")
                        .HasColumnOrder(14);

                    b.Property<string>("product_sub_category")
                        .HasColumnType("text")
                        .HasColumnName("product_sub_category")
                        .HasColumnOrder(8);

                    b.Property<long?>("product_sub_category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_sub_category_id")
                        .HasColumnOrder(7);

                    b.Property<string>("product_title")
                        .HasColumnType("text")
                        .HasColumnName("product_title")
                        .HasColumnOrder(9);

                    b.Property<string>("product_to_be_returned_by")
                        .HasColumnType("text")
                        .HasColumnName("product_to_be_returned_by")
                        .HasColumnOrder(29);

                    b.Property<long?>("quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity")
                        .HasColumnOrder(15);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(22);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(18);

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasColumnOrder(20);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(21);

                    b.HasKey("add_to_cart_id");

                    b.ToTable("AddToCartMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Auth_Token", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(" bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("creation_dttm")
                        .HasColumnType("datetime")
                        .HasColumnName("creation_dttm")
                        .HasColumnOrder(4);

                    b.Property<string>("crypto_key")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("crypto_key")
                        .HasColumnOrder(2);

                    b.Property<long>("user_code")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("user_code")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.ToTable("Auth_Token");
                });

            modelBuilder.Entity("DB.Login.Tables.BlogMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<string>("blog_category")
                        .HasColumnType("text")
                        .HasColumnName("blog_category")
                        .HasColumnOrder(9);

                    b.Property<string>("blog_category_id")
                        .HasColumnType("text")
                        .HasColumnName("blog_category_id")
                        .HasColumnOrder(10);

                    b.Property<string>("blog_content")
                        .HasColumnType("text")
                        .HasColumnName("blog_content")
                        .HasColumnOrder(12);

                    b.Property<string>("blog_description")
                        .HasColumnType("text")
                        .HasColumnName("blog_description")
                        .HasColumnOrder(11);

                    b.Property<long?>("blog_status")
                        .HasColumnType("bigint")
                        .HasColumnName("blog_status")
                        .HasColumnOrder(13);

                    b.Property<string>("blog_title")
                        .HasColumnType("text")
                        .HasColumnName("blog_title")
                        .HasColumnOrder(8);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(17);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(14);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(15);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(18);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(16);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("BlogMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<string>("category_name")
                        .HasColumnType("text")
                        .HasColumnName("category_name")
                        .HasColumnOrder(8);

                    b.Property<long?>("category_status")
                        .HasColumnType("bigint")
                        .HasColumnName("category_status")
                        .HasColumnOrder(9);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(13);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(11);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(10);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(14);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(12);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryTranxMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(3);

                    b.Property<string>("filter_name")
                        .HasColumnType("text")
                        .HasColumnName("filter_name")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(4);

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("CategoryTranxMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ClientMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<string>("client_feedback")
                        .HasColumnType("text")
                        .HasColumnName("client_feedback")
                        .HasColumnOrder(9);

                    b.Property<string>("client_name")
                        .HasColumnType("text")
                        .HasColumnName("client_name")
                        .HasColumnOrder(8);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<long?>("client_status")
                        .HasColumnType("bigint")
                        .HasColumnName("client_status")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(14);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(11);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(12);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(15);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(13);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("ClientMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ContactMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(10);

                    b.Property<string>("firstname")
                        .HasColumnType("text")
                        .HasColumnName("firstname")
                        .HasColumnOrder(8);

                    b.Property<string>("lastname")
                        .HasColumnType("text")
                        .HasColumnName("lastname")
                        .HasColumnOrder(9);

                    b.Property<string>("message")
                        .HasColumnType("text")
                        .HasColumnName("message")
                        .HasColumnOrder(13);

                    b.Property<string>("phn_no")
                        .HasColumnType("text")
                        .HasColumnName("phn_no")
                        .HasColumnOrder(11);

                    b.Property<string>("seen_status")
                        .HasColumnType("text")
                        .HasColumnName("seen_status")
                        .HasColumnOrder(14);

                    b.Property<DateTime?>("sent_on")
                        .HasColumnType("datetime")
                        .HasColumnName("sent_on")
                        .HasColumnOrder(15);

                    b.Property<string>("subject")
                        .HasColumnType("text")
                        .HasColumnName("subject")
                        .HasColumnOrder(12);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("ContactMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.FaqMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<string>("answer")
                        .HasColumnType("text")
                        .HasColumnName("answer")
                        .HasColumnOrder(9);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(13);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(11);

                    b.Property<long?>("faq_status")
                        .HasColumnType("bigint")
                        .HasColumnName("faq_status")
                        .HasColumnOrder(10);

                    b.Property<string>("question")
                        .HasColumnType("text")
                        .HasColumnName("question")
                        .HasColumnOrder(8);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(14);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(12);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("FaqMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Forms_Master", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(" bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("form_display_color")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_display_color")
                        .HasColumnOrder(8);

                    b.Property<string>("form_display_status")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_display_status")
                        .HasColumnOrder(6);

                    b.Property<string>("form_href")
                        .HasColumnType("text")
                        .HasColumnName("form_href")
                        .HasColumnOrder(9);

                    b.Property<long?>("form_master_id")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("form_master_id")
                        .HasColumnOrder(7);

                    b.Property<string>("form_name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_name")
                        .HasColumnOrder(2);

                    b.Property<string>("form_table")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_table")
                        .HasColumnOrder(3);

                    b.Property<string>("form_title")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_title")
                        .HasColumnOrder(5);

                    b.Property<string>("form_type")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_type")
                        .HasColumnOrder(4);

                    b.HasKey("id");

                    b.ToTable("forms_master");
                });

            modelBuilder.Entity("DB.Login.Tables.Forms_Trx_Master", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(" bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("delete_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("delete_yes_no")
                        .HasColumnOrder(6);

                    b.Property<long?>("form_master_id")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("form_master_id")
                        .HasColumnOrder(2);

                    b.Property<string>("modify_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modify_yes_no")
                        .HasColumnOrder(5);

                    b.Property<string>("print_only")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("print_only")
                        .HasColumnOrder(7);

                    b.Property<string>("report_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("report_yes_no")
                        .HasColumnOrder(8);

                    b.Property<string>("save_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("save_yes_no")
                        .HasColumnOrder(4);

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("user_id")
                        .HasColumnOrder(3);

                    b.Property<string>("view_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("view_yes_no")
                        .HasColumnOrder(9);

                    b.HasKey("id");

                    b.HasIndex("form_master_id");

                    b.HasIndex("user_id");

                    b.ToTable("forms_trx_master");
                });

            modelBuilder.Entity("DB.Login.Tables.HelperMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(5);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(4);

                    b.Property<string>("field_data")
                        .HasColumnType("text")
                        .HasColumnName("field_data")
                        .HasColumnOrder(3);

                    b.Property<string>("field_name")
                        .HasColumnType("text")
                        .HasColumnName("field_name")
                        .HasColumnOrder(2);

                    b.Property<string>("form_name")
                        .HasColumnType("text")
                        .HasColumnName("form_name")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(6);

                    b.HasKey("id");

                    b.ToTable("HelperMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Mini_Slider_Master", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(17);

                    b.Property<long>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(14);

                    b.Property<string>("discount_percentage")
                        .HasColumnType("text")
                        .HasColumnName("discount_percentage")
                        .HasColumnOrder(10);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(15);

                    b.Property<string>("slider_category")
                        .HasColumnType("text")
                        .HasColumnName("slider_category")
                        .HasColumnOrder(11);

                    b.Property<long?>("slider_category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("slider_category_id")
                        .HasColumnOrder(12);

                    b.Property<string>("slider_description")
                        .HasColumnType("text")
                        .HasColumnName("slider_description")
                        .HasColumnOrder(9);

                    b.Property<long>("slider_status")
                        .HasColumnType("bigint")
                        .HasColumnName("slider_status")
                        .HasColumnOrder(13);

                    b.Property<string>("slider_title")
                        .HasColumnType("text")
                        .HasColumnName("slider_title")
                        .HasColumnOrder(8);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(18);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(16);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("Mini_Slider_Master");
                });

            modelBuilder.Entity("DB.Login.Tables.OrderItemMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(19);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(13);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(14);

                    b.Property<long?>("order_id")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id")
                        .HasColumnOrder(8);

                    b.Property<long?>("product_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasColumnOrder(9);

                    b.Property<long?>("product_price")
                        .HasColumnType("bigint")
                        .HasColumnName("product_price")
                        .HasColumnOrder(16);

                    b.Property<string>("product_returnable")
                        .HasColumnType("text")
                        .HasColumnName("product_returnable")
                        .HasColumnOrder(17);

                    b.Property<string>("product_title")
                        .HasColumnType("text")
                        .HasColumnName("product_title")
                        .HasColumnOrder(16);

                    b.Property<string>("product_to_be_returned_by")
                        .HasColumnType("text")
                        .HasColumnName("product_to_be_returned_by")
                        .HasColumnOrder(18);

                    b.Property<long?>("quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity")
                        .HasColumnOrder(10);

                    b.Property<long?>("status")
                        .HasColumnType("bigint")
                        .HasColumnName("status")
                        .HasColumnOrder(12);

                    b.Property<long?>("sub_total")
                        .HasColumnType("bigint")
                        .HasColumnName("sub_total")
                        .HasColumnOrder(11);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(20);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(15);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.ToTable("OrderItemMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.OrderMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(14);

                    b.Property<long?>("customer_id")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id")
                        .HasColumnOrder(8);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(11);

                    b.Property<float?>("grand_total")
                        .HasColumnType("float(10,2)")
                        .HasColumnName("grand_total")
                        .HasColumnOrder(9);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(12);

                    b.Property<string>("order_cancel_by")
                        .HasColumnType("text")
                        .HasColumnName("order_cancel_by")
                        .HasColumnOrder(27);

                    b.Property<string>("order_cancel_done")
                        .HasColumnType("text")
                        .HasColumnName("order_cancel_done")
                        .HasColumnOrder(23);

                    b.Property<string>("order_cancel_option")
                        .HasColumnType("text")
                        .HasColumnName("order_cancel_option")
                        .HasColumnOrder(26);

                    b.Property<string>("order_cancel_reason")
                        .HasColumnType("text")
                        .HasColumnName("order_cancel_reason")
                        .HasColumnOrder(25);

                    b.Property<DateTime?>("order_cancel_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_cancel_time")
                        .HasColumnOrder(24);

                    b.Property<string>("order_delivery_done")
                        .HasColumnType("text")
                        .HasColumnName("order_delivery_done")
                        .HasColumnOrder(21);

                    b.Property<DateTime?>("order_delivery_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_delivery_time")
                        .HasColumnOrder(22);

                    b.Property<string>("order_number")
                        .HasColumnType("text")
                        .HasColumnName("order_number")
                        .HasColumnOrder(16);

                    b.Property<string>("order_processing_done")
                        .HasColumnType("text")
                        .HasColumnName("order_processing_done")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("order_processing_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_processing_time")
                        .HasColumnOrder(20);

                    b.Property<string>("order_shipping_done")
                        .HasColumnType("text")
                        .HasColumnName("order_shipping_done")
                        .HasColumnOrder(17);

                    b.Property<DateTime?>("order_shipping_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_shipping_time")
                        .HasColumnOrder(18);

                    b.Property<long?>("order_status")
                        .HasColumnType("bigint")
                        .HasColumnName("order_status")
                        .HasColumnOrder(10);

                    b.Property<string>("order_user_address")
                        .HasColumnType("text")
                        .HasColumnName("order_user_address")
                        .HasColumnOrder(29);

                    b.Property<string>("order_user_address_type")
                        .HasColumnType("text")
                        .HasColumnName("order_user_address_type")
                        .HasColumnOrder(31);

                    b.Property<string>("order_user_city")
                        .HasColumnType("text")
                        .HasColumnName("order_user_city")
                        .HasColumnOrder(32);

                    b.Property<string>("order_user_country")
                        .HasColumnType("text")
                        .HasColumnName("order_user_country")
                        .HasColumnOrder(33);

                    b.Property<string>("order_user_name")
                        .HasColumnType("text")
                        .HasColumnName("order_user_name")
                        .HasColumnOrder(28);

                    b.Property<string>("order_user_pincode")
                        .HasColumnType("text")
                        .HasColumnName("order_user_pincode")
                        .HasColumnOrder(30);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(15);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(13);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("OrderMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.PartyMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("address")
                        .HasColumnType("text")
                        .HasColumnName("address")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(7);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(5);

                    b.Property<long?>("mobile_number")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile_number")
                        .HasColumnOrder(4);

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<string>("party_type")
                        .HasColumnType("text")
                        .HasColumnName("party_type")
                        .HasColumnOrder(7);

                    b.Property<long?>("pincode")
                        .HasColumnType("bigint")
                        .HasColumnName("pincode")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(8);

                    b.HasKey("id");

                    b.ToTable("PartyMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.PaymentMaster", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("address")
                        .HasColumnType("text")
                        .HasColumnName("address")
                        .HasColumnOrder(4);

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount")
                        .HasColumnOrder(6);

                    b.Property<long?>("created_by")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasColumnOrder(15);

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(5);

                    b.Property<string>("mobile_no")
                        .HasColumnType("text")
                        .HasColumnName("mobile_no")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasColumnOrder(14);

                    b.Property<long?>("modify_by")
                        .HasColumnType("bigint")
                        .HasColumnName("modify_by")
                        .HasColumnOrder(13);

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<long?>("order_id")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id")
                        .HasColumnOrder(18);

                    b.Property<string>("payment_mode")
                        .HasColumnType("text")
                        .HasColumnName("payment_mode")
                        .HasColumnOrder(16);

                    b.Property<string>("payment_status")
                        .HasColumnType("text")
                        .HasColumnName("payment_status")
                        .HasColumnOrder(7);

                    b.Property<string>("push_url")
                        .HasColumnType("text")
                        .HasColumnName("push_url")
                        .HasColumnOrder(10);

                    b.Property<string>("response_url")
                        .HasColumnType("text")
                        .HasColumnName("response_url")
                        .HasColumnOrder(11);

                    b.Property<string>("transaction_id")
                        .HasColumnType("text")
                        .HasColumnName("transaction_id")
                        .HasColumnOrder(8);

                    b.Property<string>("unique_ref_no")
                        .HasColumnType("text")
                        .HasColumnName("unique_ref_no")
                        .HasColumnOrder(9);

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasColumnOrder(17);

                    b.HasKey("id");

                    b.ToTable("PaymentMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(7);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(6);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<long?>("comp_id")
                        .HasColumnType("bigint")
                        .HasColumnName("comp_id")
                        .HasColumnOrder(23);

                    b.Property<string>("comp_name")
                        .HasColumnType("text")
                        .HasColumnName("comp_name")
                        .HasColumnOrder(22);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(24);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(18);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(19);

                    b.Property<string>("product_category")
                        .HasColumnType("text")
                        .HasColumnName("product_category")
                        .HasColumnOrder(11);

                    b.Property<long?>("product_category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_category_id")
                        .HasColumnOrder(14);

                    b.Property<decimal?>("product_commission_amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_commission_amt")
                        .HasColumnOrder(32);

                    b.Property<decimal?>("product_commission_percentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_commission_percentage")
                        .HasColumnOrder(31);

                    b.Property<string>("product_commission_received_in")
                        .HasColumnType("text")
                        .HasColumnName("product_commission_received_in")
                        .HasColumnOrder(30);

                    b.Property<string>("product_content")
                        .HasColumnType("text")
                        .HasColumnName("product_content")
                        .HasColumnOrder(16);

                    b.Property<long?>("product_del_price")
                        .HasColumnType("bigint")
                        .HasColumnName("product_del_price")
                        .HasColumnOrder(10);

                    b.Property<string>("product_description")
                        .HasColumnType("text")
                        .HasColumnName("product_description")
                        .HasColumnOrder(15);

                    b.Property<decimal?>("product_points_earned")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_points_earned")
                        .HasColumnOrder(33);

                    b.Property<long?>("product_price")
                        .HasColumnType("bigint")
                        .HasColumnName("product_price")
                        .HasColumnOrder(9);

                    b.Property<long?>("product_purchasing_price")
                        .HasColumnType("bigint")
                        .HasColumnName("product_purchasing_price")
                        .HasColumnOrder(29);

                    b.Property<string>("product_returnable")
                        .HasColumnType("text")
                        .HasColumnName("product_returnable")
                        .HasColumnOrder(27);

                    b.Property<long?>("product_status")
                        .HasColumnType("bigint")
                        .HasColumnName("product_status")
                        .HasColumnOrder(17);

                    b.Property<long?>("product_store_qty")
                        .HasColumnType("bigint")
                        .HasColumnName("product_store_qty")
                        .HasColumnOrder(26);

                    b.Property<string>("product_sub_category")
                        .HasColumnType("text")
                        .HasColumnName("product_sub_category")
                        .HasColumnOrder(13);

                    b.Property<long?>("product_sub_category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_sub_category_id")
                        .HasColumnOrder(12);

                    b.Property<string>("product_title")
                        .HasColumnType("text")
                        .HasColumnName("product_title")
                        .HasColumnOrder(8);

                    b.Property<string>("product_to_be_returned_by")
                        .HasColumnType("text")
                        .HasColumnName("product_to_be_returned_by")
                        .HasColumnOrder(28);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(25);

                    b.Property<string>("user_id")
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id")
                        .HasColumnOrder(21);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(20);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(5);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(4);

                    b.HasKey("id");

                    b.HasIndex("product_category_id");

                    b.HasIndex("product_sub_category_id");

                    b.ToTable("ProductMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductMultipleImageTransMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(1);

                    b.Property<long?>("product_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("ProductMultipleImageTransMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductTransMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(3);

                    b.Property<string>("product_filter_data")
                        .HasColumnType("text")
                        .HasColumnName("product_filter_data")
                        .HasColumnOrder(2);

                    b.Property<string>("product_filter_name")
                        .HasColumnType("text")
                        .HasColumnName("product_filter_name")
                        .HasColumnOrder(1);

                    b.Property<long?>("product_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasColumnOrder(4);

                    b.Property<string>("product_item_stock")
                        .HasColumnType("text")
                        .HasColumnName("product_item_stock")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(4);

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("ProductTransMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ReturnMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(9);

                    b.Property<string>("order_cancel_option")
                        .HasColumnType("text")
                        .HasColumnName("order_cancel_option")
                        .HasColumnOrder(16);

                    b.Property<string>("order_cancel_reason")
                        .HasColumnType("text")
                        .HasColumnName("order_cancel_reason")
                        .HasColumnOrder(15);

                    b.Property<string>("order_courier_name")
                        .HasColumnType("text")
                        .HasColumnName("order_courier_name")
                        .HasColumnOrder(12);

                    b.Property<string>("order_courier_pod_no")
                        .HasColumnType("text")
                        .HasColumnName("order_courier_pod_no")
                        .HasColumnOrder(13);

                    b.Property<string>("order_courier_receipt_image")
                        .HasColumnType("text")
                        .HasColumnName("order_courier_receipt_image")
                        .HasColumnOrder(7);

                    b.Property<long?>("order_item_id")
                        .HasColumnType("bigint")
                        .HasColumnName("order_item_id")
                        .HasColumnOrder(8);

                    b.Property<string>("order_refund")
                        .HasColumnType("text")
                        .HasColumnName("order_refund")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("order_refund_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_refund_time")
                        .HasColumnOrder(6);

                    b.Property<long?>("order_return_status")
                        .HasColumnType("bigint")
                        .HasColumnName("order_return_status")
                        .HasColumnOrder(11);

                    b.Property<string>("order_returnable")
                        .HasColumnType("text")
                        .HasColumnName("order_returnable")
                        .HasColumnOrder(1);

                    b.Property<string>("order_returnable_received")
                        .HasColumnType("text")
                        .HasColumnName("order_returnable_received")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("order_returnable_received_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_returnable_received_time")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("order_returnable_time")
                        .HasColumnType("datetime")
                        .HasColumnName("order_returnable_time")
                        .HasColumnOrder(2);

                    b.Property<string>("product_to_be_returned_by")
                        .HasColumnType("text")
                        .HasColumnName("product_to_be_returned_by")
                        .HasColumnOrder(14);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(10);

                    b.HasKey("id");

                    b.HasIndex("order_item_id");

                    b.ToTable("ReturnMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ReviewMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(13);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(10);

                    b.Property<long?>("product_id")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasColumnOrder(11);

                    b.Property<string>("product_review")
                        .HasColumnType("text")
                        .HasColumnName("product_review")
                        .HasColumnOrder(9);

                    b.Property<long?>("rating_stars")
                        .HasColumnType("bigint")
                        .HasColumnName("rating_stars")
                        .HasColumnOrder(8);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(14);

                    b.Property<long?>("user_id")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasColumnOrder(12);

                    b.Property<long?>("vendor_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vendor_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vendor_name")
                        .HasColumnType("text")
                        .HasColumnName("vendor_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("user_id");

                    b.ToTable("ReviewMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Slider_Master", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(14);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(11);

                    b.Property<string>("img_url")
                        .HasColumnType("text")
                        .HasColumnName("img_url")
                        .HasColumnOrder(12);

                    b.Property<string>("slider_description")
                        .HasColumnType("text")
                        .HasColumnName("slider_description")
                        .HasColumnOrder(9);

                    b.Property<long?>("slider_status")
                        .HasColumnType("bigint")
                        .HasColumnName("slider_status")
                        .HasColumnOrder(10);

                    b.Property<string>("slider_title")
                        .HasColumnType("text")
                        .HasColumnName("slider_title")
                        .HasColumnOrder(8);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(15);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(13);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("Slider_Master");
                });

            modelBuilder.Entity("DB.Login.Tables.SubCategoryMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(15);

                    b.Property<long?>("deleted")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted")
                        .HasColumnOrder(13);

                    b.Property<long?>("parent_category_id")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_category_id")
                        .HasColumnOrder(9);

                    b.Property<string>("parent_category_name")
                        .HasColumnType("text")
                        .HasColumnName("parent_category_name")
                        .HasColumnOrder(10);

                    b.Property<string>("sub_category_name")
                        .HasColumnType("text")
                        .HasColumnName("sub_category_name")
                        .HasColumnOrder(8);

                    b.Property<long?>("sub_category_status")
                        .HasColumnType("bigint")
                        .HasColumnName("sub_category_status")
                        .HasColumnOrder(12);

                    b.Property<string>("sub_heading")
                        .HasColumnType("text")
                        .HasColumnName("sub_heading")
                        .HasColumnOrder(11);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(16);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(14);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.HasIndex("parent_category_id");

                    b.ToTable("SubCategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SystemFilterMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_at")
                        .HasColumnOrder(6);

                    b.Property<long?>("delete")
                        .HasColumnType("bigint")
                        .HasColumnName("delete")
                        .HasColumnOrder(4);

                    b.Property<string>("filter_key")
                        .HasColumnType("text")
                        .HasColumnName("filter_key")
                        .HasColumnOrder(2);

                    b.Property<string>("filter_name")
                        .HasColumnType("text")
                        .HasColumnName("filter_name")
                        .HasColumnOrder(1);

                    b.Property<long?>("filter_status")
                        .HasColumnType("bigint")
                        .HasColumnName("filter_status")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.ToTable("SystemFilterMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SystemFilterTranxMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_at")
                        .HasColumnOrder(5);

                    b.Property<long?>("delete")
                        .HasColumnType("bigint")
                        .HasColumnName("delete")
                        .HasColumnOrder(3);

                    b.Property<string>("filter_data")
                        .HasColumnType("text")
                        .HasColumnName("filter_data")
                        .HasColumnOrder(1);

                    b.Property<long?>("filter_trns_status")
                        .HasColumnType("bigint")
                        .HasColumnName("filter_trns_status")
                        .HasColumnOrder(2);

                    b.Property<long?>("system_master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("system_master_id")
                        .HasColumnOrder(6);

                    b.HasKey("id");

                    b.HasIndex("system_master_id");

                    b.ToTable("SystemFilterTranxMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SystemMaster", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<string>("company_about_detail")
                        .HasColumnType("text")
                        .HasColumnName("company_about_detail")
                        .HasColumnOrder(20);

                    b.Property<string>("company_address")
                        .HasColumnType("text")
                        .HasColumnName("company_address")
                        .HasColumnOrder(9);

                    b.Property<long?>("company_delete_status")
                        .HasColumnType("bigint")
                        .HasColumnName("company_delete_status")
                        .HasColumnOrder(19);

                    b.Property<string>("company_email")
                        .HasColumnType("text")
                        .HasColumnName("company_email")
                        .HasColumnOrder(13);

                    b.Property<string>("company_fb_link")
                        .HasColumnType("text")
                        .HasColumnName("company_fb_link")
                        .HasColumnOrder(15);

                    b.Property<string>("company_img_url")
                        .HasColumnType("text")
                        .HasColumnName("company_img_url")
                        .HasColumnOrder(12);

                    b.Property<string>("company_intragram_link")
                        .HasColumnType("text")
                        .HasColumnName("company_intragram_link")
                        .HasColumnOrder(16);

                    b.Property<string>("company_linkedin_link")
                        .HasColumnType("text")
                        .HasColumnName("company_linkedin_link")
                        .HasColumnOrder(14);

                    b.Property<string>("company_name")
                        .HasColumnType("text")
                        .HasColumnName("company_name")
                        .HasColumnOrder(8);

                    b.Property<ulong?>("company_order_otp_active")
                        .HasColumnType("bit")
                        .HasColumnName("company_order_otp_active")
                        .HasColumnOrder(24);

                    b.Property<string>("company_phoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("company_phone_number")
                        .HasColumnOrder(11);

                    b.Property<string>("company_pincode")
                        .HasColumnType("text")
                        .HasColumnName("company_pincode")
                        .HasColumnOrder(10);

                    b.Property<string>("company_policy")
                        .HasColumnType("text")
                        .HasColumnName("company_policy")
                        .HasColumnOrder(22);

                    b.Property<string>("company_return")
                        .HasColumnType("text")
                        .HasColumnName("company_return")
                        .HasColumnOrder(23);

                    b.Property<long?>("company_status")
                        .HasColumnType("bigint")
                        .HasColumnName("company_status")
                        .HasColumnOrder(18);

                    b.Property<string>("company_terms")
                        .HasColumnType("text")
                        .HasColumnName("company_terms")
                        .HasColumnOrder(21);

                    b.Property<string>("company_twitter_link")
                        .HasColumnType("text")
                        .HasColumnName("company_twitter_link")
                        .HasColumnOrder(17);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.ToTable("SystemMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.User_Detail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("comp_id")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("comp_id")
                        .HasColumnOrder(21);

                    b.Property<string>("comp_name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("comp_name")
                        .HasColumnOrder(22);

                    b.Property<string>("cs_modi_del_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cs_modi_del_yes_no")
                        .HasColumnOrder(10);

                    b.Property<string>("cs_save_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cs_save_yes_no")
                        .HasColumnOrder(9);

                    b.Property<string>("delete_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("delete_yes_no")
                        .HasColumnOrder(8);

                    b.Property<string>("modify_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modify_yes_no")
                        .HasColumnOrder(7);

                    b.Property<string>("print_only")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("print_only")
                        .HasColumnOrder(11);

                    b.Property<string>("report_yes_no")
                        .HasColumnType("varchar(3)")
                        .HasColumnName("report_yes_no")
                        .HasColumnOrder(20);

                    b.Property<string>("save_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("save_yes_no")
                        .HasColumnOrder(6);

                    b.Property<string>("software_version")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("software_version")
                        .HasColumnOrder(18);

                    b.Property<string>("user_allotement_status")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_allotement_status")
                        .HasColumnOrder(19);

                    b.Property<long>("user_code")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("user_code")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("user_created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("user_created_on")
                        .HasColumnOrder(16);

                    b.Property<string>("user_email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_email")
                        .HasColumnOrder(14);

                    b.Property<string>("user_email_pass")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_email_pass")
                        .HasColumnOrder(15);

                    b.Property<long>("user_mobile")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("user_mobile")
                        .HasColumnOrder(13);

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_name")
                        .HasColumnOrder(3);

                    b.Property<string>("user_pancard")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("user_pancard")
                        .HasColumnOrder(25);

                    b.Property<string>("user_pass")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_pass")
                        .HasColumnOrder(5);

                    b.Property<string>("user_profile")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_profile")
                        .HasColumnOrder(4);

                    b.Property<long?>("user_profile_id")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("user_profile_id")
                        .HasColumnOrder(24);

                    b.Property<string>("user_status")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_status")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("user_updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("user_updated_on")
                        .HasColumnOrder(17);

                    b.Property<string>("view_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("view_yes_no")
                        .HasColumnOrder(23);

                    b.HasKey("id");

                    b.HasIndex("user_code")
                        .IsUnique();

                    b.HasIndex("user_profile_id");

                    b.ToTable("User_Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.User_Log_Master", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<double?>("log_id")
                        .HasColumnType("double(18,3)")
                        .HasColumnName("log_id")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("log_in_time")
                        .HasColumnType("datetime")
                        .HasColumnName("log_in_time")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("log_out_time")
                        .HasColumnType("datetime")
                        .HasColumnName("log_out_time")
                        .HasColumnOrder(7);

                    b.Property<double?>("log_user_id")
                        .HasColumnType("double(18,3)")
                        .HasColumnName("log_user_id")
                        .HasColumnOrder(3);

                    b.Property<string>("log_user_name")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("log_user_name")
                        .HasColumnOrder(4);

                    b.Property<string>("log_user_type")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("log_user_type")
                        .HasColumnOrder(5);

                    b.HasKey("id");

                    b.ToTable("User_Log_Master");
                });

            modelBuilder.Entity("DB.Login.Tables.User_OTP_Transaction", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long>("UserDetailId")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("UserDetailId")
                        .HasColumnOrder(2);

                    b.Property<string>("u_otpno")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("u_otpno")
                        .HasColumnOrder(5);

                    b.Property<string>("u_purpose")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("u_purpose")
                        .HasColumnOrder(4);

                    b.Property<string>("u_verification")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("u_verification")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("user_otp_transaction");
                });

            modelBuilder.Entity("DB.Login.Tables.User_Profile_Master", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("delete_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("delete_yes_no")
                        .HasColumnOrder(5);

                    b.Property<string>("modify_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modify_yes_no")
                        .HasColumnOrder(4);

                    b.Property<string>("print_only")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("print_only")
                        .HasColumnOrder(6);

                    b.Property<string>("report_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("report_yes_no")
                        .HasColumnOrder(7);

                    b.Property<string>("save_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("save_yes_no")
                        .HasColumnOrder(3);

                    b.Property<string>("user_profile")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_profile")
                        .HasColumnOrder(2);

                    b.Property<string>("view_yes_no")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("view_yes_no")
                        .HasColumnOrder(8);

                    b.HasKey("id");

                    b.ToTable("user_profile_master");
                });

            modelBuilder.Entity("DB.Login.Tables.UserMultiAddDetails", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(10) auto_increment")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("m_address")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("m_address")
                        .HasColumnOrder(4);

                    b.Property<string>("m_address_type")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_address_type")
                        .HasColumnOrder(8);

                    b.Property<string>("m_city")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("m_city")
                        .HasColumnOrder(5);

                    b.Property<string>("m_country")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("m_country")
                        .HasColumnOrder(7);

                    b.Property<string>("m_form_name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("m_form_name")
                        .HasColumnOrder(3);

                    b.Property<string>("m_pin_code")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("m_pin_code")
                        .HasColumnOrder(6);

                    b.Property<long>("userId")
                        .HasColumnType("bigint(10)")
                        .HasColumnName("userId")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("UserMultiAddDetails");
                });

            modelBuilder.Entity("DB.Login.Tables.vou_list_master", b =>
                {
                    b.Property<long?>("vou_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("vou_type_id")
                        .HasColumnOrder(1);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(7);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(8);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(5);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(11);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(12);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(9);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(10);

                    b.Property<string>("vou_list_remark")
                        .HasColumnType("text")
                        .HasColumnName("vou_list_remark")
                        .HasColumnOrder(3);

                    b.Property<string>("vou_type_name")
                        .HasColumnType("text")
                        .HasColumnName("vou_type_name")
                        .HasColumnOrder(2);

                    b.HasKey("vou_type_id");

                    b.ToTable("vou_list_master");
                });

            modelBuilder.Entity("DB.Login.Tables.vou_master", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(16);

                    b.Property<long?>("status")
                        .HasColumnType("bigint")
                        .HasColumnName("status")
                        .HasColumnOrder(19);

                    b.Property<decimal?>("tot_vou_amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tot_vou_amt")
                        .HasColumnOrder(15);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(17);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(18);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.Property<long?>("vou_cash_bank_id")
                        .HasColumnType("bigint")
                        .HasColumnName("vou_cash_bank_id")
                        .HasColumnOrder(13);

                    b.Property<string>("vou_cash_bank_name")
                        .HasColumnType("text")
                        .HasColumnName("vou_cash_bank_name")
                        .HasColumnOrder(14);

                    b.Property<DateTime?>("vou_date")
                        .HasColumnType("date")
                        .HasColumnName("vou_date")
                        .HasColumnOrder(12);

                    b.Property<string>("vou_fa_year")
                        .HasColumnType("text")
                        .HasColumnName("vou_fa_year")
                        .HasColumnOrder(10);

                    b.Property<string>("vou_ref_no")
                        .HasColumnType("text")
                        .HasColumnName("vou_ref_no")
                        .HasColumnOrder(11);

                    b.Property<string>("vou_type")
                        .HasColumnType("text")
                        .HasColumnName("vou_type")
                        .HasColumnOrder(9);

                    b.Property<long?>("vou_type_id")
                        .HasColumnType("bigint")
                        .HasColumnName("vou_type_id")
                        .HasColumnOrder(8);

                    b.HasKey("id");

                    b.ToTable("vou_master");
                });

            modelBuilder.Entity("DB.Login.Tables.vou_trn_master", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("agent_code")
                        .HasColumnType("bigint")
                        .HasColumnName("agent_code")
                        .HasColumnOrder(4);

                    b.Property<string>("agent_name")
                        .HasColumnType("text")
                        .HasColumnName("agent_name")
                        .HasColumnOrder(5);

                    b.Property<long?>("client_purchaser_code")
                        .HasColumnType("bigint")
                        .HasColumnName("client_purchaser_code")
                        .HasColumnOrder(2);

                    b.Property<string>("client_purchaser_name")
                        .HasColumnType("text")
                        .HasColumnName("client_purchaser_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on")
                        .HasColumnOrder(15);

                    b.Property<long?>("status")
                        .HasColumnType("bigint")
                        .HasColumnName("status")
                        .HasColumnOrder(18);

                    b.Property<long?>("unique_trn_id")
                        .HasColumnType("bigint")
                        .HasColumnName("unique_trn_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("updated_on")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on")
                        .HasColumnOrder(16);

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(17);

                    b.Property<long?>("vender_code")
                        .HasColumnType("bigint")
                        .HasColumnName("vender_code")
                        .HasColumnOrder(6);

                    b.Property<string>("vender_name")
                        .HasColumnType("text")
                        .HasColumnName("vender_name")
                        .HasColumnOrder(7);

                    b.Property<string>("vou_agst_bill")
                        .HasColumnType("text")
                        .HasColumnName("vou_agst_bill")
                        .HasColumnOrder(14);

                    b.Property<decimal>("vou_amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("vou_amt")
                        .HasColumnOrder(13);

                    b.Property<string>("vou_chq_detail")
                        .HasColumnType("text")
                        .HasColumnName("vou_chq_detail")
                        .HasColumnOrder(11);

                    b.Property<string>("vou_narr")
                        .HasColumnType("text")
                        .HasColumnName("vou_narr")
                        .HasColumnOrder(12);

                    b.Property<long?>("vou_p_id")
                        .HasColumnType("bigint")
                        .HasColumnName("vou_p_id")
                        .HasColumnOrder(9);

                    b.Property<string>("vou_pname")
                        .HasColumnType("text")
                        .HasColumnName("vou_pname")
                        .HasColumnOrder(10);

                    b.Property<long?>("voucher_master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("voucher_master_id")
                        .HasColumnOrder(8);

                    b.HasKey("id");

                    b.HasIndex("voucher_master_id");

                    b.ToTable("vou_trn_master");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryTranxMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.CategoryMaster", "CategoryMaster")
                        .WithMany("CategoryTranxMaster")
                        .HasForeignKey("category_id");

                    b.Navigation("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Forms_Trx_Master", b =>
                {
                    b.HasOne("DB.Login.Tables.Forms_Master", "Forms_Master")
                        .WithMany("Forms_Trx_Masters")
                        .HasForeignKey("form_master_id");

                    b.HasOne("DB.Login.Tables.User_Detail", "User_Detail")
                        .WithMany("Forms_Trx_Masters")
                        .HasForeignKey("user_id");

                    b.Navigation("Forms_Master");

                    b.Navigation("User_Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.OrderItemMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.OrderMaster", "OrderMaster")
                        .WithMany("OrderItemMasters")
                        .HasForeignKey("order_id");

                    b.Navigation("OrderMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.CategoryMaster", "CategoryMaster")
                        .WithMany()
                        .HasForeignKey("product_category_id");

                    b.HasOne("DB.Login.Tables.SubCategoryMaster", "SubCategoryMaster")
                        .WithMany("ProductMaster")
                        .HasForeignKey("product_sub_category_id");

                    b.Navigation("CategoryMaster");

                    b.Navigation("SubCategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductMultipleImageTransMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.ProductMaster", "ProductMaster")
                        .WithMany("ProductMultipleImageTransMaster")
                        .HasForeignKey("product_id");

                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductTransMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.ProductMaster", "ProductMaster")
                        .WithMany("ProductTransMaster")
                        .HasForeignKey("product_id");

                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ReturnMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.OrderItemMaster", "OrderItemMaster")
                        .WithMany("ReturnMaster")
                        .HasForeignKey("order_item_id");

                    b.Navigation("OrderItemMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ReviewMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.ProductMaster", "ProductMaster")
                        .WithMany("ReviewMaster")
                        .HasForeignKey("product_id");

                    b.HasOne("DB.Login.Tables.User_Detail", "User_Detail")
                        .WithMany("ReviewMaster")
                        .HasForeignKey("user_id");

                    b.Navigation("ProductMaster");

                    b.Navigation("User_Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.SubCategoryMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.CategoryMaster", "CategoryMaster")
                        .WithMany("subCategoryMasters")
                        .HasForeignKey("parent_category_id");

                    b.Navigation("CategoryMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SystemFilterTranxMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.SystemFilterMaster", "SystemFilterMaster")
                        .WithMany("SystemFilterTranxMaster")
                        .HasForeignKey("system_master_id");

                    b.Navigation("SystemFilterMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.User_Detail", b =>
                {
                    b.HasOne("DB.Login.Tables.User_Profile_Master", "User_Profile_Masters")
                        .WithMany("User_Details")
                        .HasForeignKey("user_profile_id");

                    b.Navigation("User_Profile_Masters");
                });

            modelBuilder.Entity("DB.Login.Tables.User_OTP_Transaction", b =>
                {
                    b.HasOne("DB.Login.Tables.User_Detail", "User_Detail")
                        .WithMany("User_OTP_Transactions")
                        .HasForeignKey("UserDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.UserMultiAddDetails", b =>
                {
                    b.HasOne("DB.Login.Tables.User_Detail", "User_Detail")
                        .WithMany("UserMultiAddDetails")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.vou_trn_master", b =>
                {
                    b.HasOne("DB.Login.Tables.vou_master", "vou_master")
                        .WithMany("vou_trn_master")
                        .HasForeignKey("voucher_master_id");

                    b.Navigation("vou_master");
                });

            modelBuilder.Entity("DB.Login.Tables.CategoryMaster", b =>
                {
                    b.Navigation("CategoryTranxMaster");

                    b.Navigation("subCategoryMasters");
                });

            modelBuilder.Entity("DB.Login.Tables.Forms_Master", b =>
                {
                    b.Navigation("Forms_Trx_Masters");
                });

            modelBuilder.Entity("DB.Login.Tables.OrderItemMaster", b =>
                {
                    b.Navigation("ReturnMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.OrderMaster", b =>
                {
                    b.Navigation("OrderItemMasters");
                });

            modelBuilder.Entity("DB.Login.Tables.ProductMaster", b =>
                {
                    b.Navigation("ProductMultipleImageTransMaster");

                    b.Navigation("ProductTransMaster");

                    b.Navigation("ReviewMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SubCategoryMaster", b =>
                {
                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.SystemFilterMaster", b =>
                {
                    b.Navigation("SystemFilterTranxMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.User_Detail", b =>
                {
                    b.Navigation("Forms_Trx_Masters");

                    b.Navigation("ReviewMaster");

                    b.Navigation("UserMultiAddDetails");

                    b.Navigation("User_OTP_Transactions");
                });

            modelBuilder.Entity("DB.Login.Tables.User_Profile_Master", b =>
                {
                    b.Navigation("User_Details");
                });

            modelBuilder.Entity("DB.Login.Tables.vou_master", b =>
                {
                    b.Navigation("vou_trn_master");
                });
#pragma warning restore 612, 618
        }
    }
}
