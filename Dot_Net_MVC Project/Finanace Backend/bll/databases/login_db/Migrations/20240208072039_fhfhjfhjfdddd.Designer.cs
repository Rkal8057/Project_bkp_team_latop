// <auto-generated />
using System;
using DB.Login;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Login.Migrations
{
    [DbContext(typeof(loginDBContext))]
    [Migration("20240208072039_fhfhjfhjfdddd")]
    partial class fhfhjfhjfdddd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DB.Login.Tables.CaseHireMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(15);

                    b.Property<string>("Hire_Area")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Area")
                        .HasColumnOrder(11);

                    b.Property<string>("Hire_Company_Name")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Company_Name")
                        .HasColumnOrder(5);

                    b.Property<string>("Hire_Email")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Email")
                        .HasColumnOrder(13);

                    b.Property<string>("Hire_Location")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Location")
                        .HasColumnOrder(12);

                    b.Property<string>("Hire_Name")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Name")
                        .HasColumnOrder(1);

                    b.Property<string>("Hire_Off_Address")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Off_Address")
                        .HasColumnOrder(7);

                    b.Property<string>("Hire_Off_Ph_Nos")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Off_Ph_Nos")
                        .HasColumnOrder(6);

                    b.Property<string>("Hire_Ph_No")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Ph_No")
                        .HasColumnOrder(4);

                    b.Property<string>("Hire_Ph_No2")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Ph_No2")
                        .HasColumnOrder(8);

                    b.Property<string>("Hire_Post")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Post")
                        .HasColumnOrder(9);

                    b.Property<string>("Hire_Profession")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Profession")
                        .HasColumnOrder(10);

                    b.Property<string>("Hire_Resi_Address")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Resi_Address")
                        .HasColumnOrder(3);

                    b.Property<string>("Hire_SWH_Name")
                        .HasColumnType("text")
                        .HasColumnName("Hire_SWH_Name")
                        .HasColumnOrder(2);

                    b.Property<string>("Hire_Whatsapp_Phone")
                        .HasColumnType("text")
                        .HasColumnName("Hire_Whatsapp_Phone")
                        .HasColumnOrder(14);

                    b.HasKey("id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("CaseHireMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CaseMaster", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Case_ADVANCE_REQ")
                        .HasColumnType("text")
                        .HasColumnName("Case_ADVANCE_REQ")
                        .HasColumnOrder(9);

                    b.Property<string>("Case_Ac_Close")
                        .HasColumnType("text")
                        .HasColumnName("Case_Ac_Close")
                        .HasColumnOrder(31);

                    b.Property<DateTime?>("Case_Ac_Close_Date")
                        .HasColumnType("date")
                        .HasColumnName("Case_Ac_Close_Date")
                        .HasColumnOrder(32);

                    b.Property<string>("Case_Block_YN")
                        .HasColumnType("text")
                        .HasColumnName("Case_Block_YN")
                        .HasColumnOrder(33);

                    b.Property<string>("Case_Case_No")
                        .HasColumnType("text")
                        .HasColumnName("Case_Case_No")
                        .HasColumnOrder(29);

                    b.Property<string>("Case_Case_Remark")
                        .HasColumnType("text")
                        .HasColumnName("Case_Case_Remark")
                        .HasColumnOrder(14);

                    b.Property<string>("Case_Case_stage")
                        .HasColumnType("text")
                        .HasColumnName("Case_Case_stage")
                        .HasColumnOrder(30);

                    b.Property<string>("Case_Chq_NO")
                        .HasColumnType("text")
                        .HasColumnName("Case_Chq_NO")
                        .HasColumnOrder(13);

                    b.Property<DateTime?>("Case_Curr_Date")
                        .HasColumnType("date")
                        .HasColumnName("Case_Curr_Date")
                        .HasColumnOrder(28);

                    b.Property<string>("Case_Dealer_Name")
                        .HasColumnType("text")
                        .HasColumnName("Case_Dealer_Name")
                        .HasColumnOrder(27);

                    b.Property<DateTime?>("Case_Due_Date")
                        .HasColumnType("date")
                        .HasColumnName("Case_Due_Date")
                        .HasColumnOrder(11);

                    b.Property<string>("Case_Extra_Inst")
                        .HasColumnType("text")
                        .HasColumnName("Case_Extra_Inst")
                        .HasColumnOrder(21);

                    b.Property<string>("Case_F_O_CHARGE")
                        .HasColumnType("text")
                        .HasColumnName("Case_F_O_CHARGE")
                        .HasColumnOrder(16);

                    b.Property<string>("Case_Finance_Amt")
                        .HasColumnType("text")
                        .HasColumnName("Case_Finance_Amt")
                        .HasColumnOrder(2);

                    b.Property<string>("Case_Finance_Amt_2")
                        .HasColumnType("text")
                        .HasColumnName("Case_Finance_Amt_2")
                        .HasColumnOrder(23);

                    b.Property<string>("Case_Instalments")
                        .HasColumnType("text")
                        .HasColumnName("Case_Instalments")
                        .HasColumnOrder(5);

                    b.Property<string>("Case_Instalments_By")
                        .HasColumnType("text")
                        .HasColumnName("Case_Instalments_By")
                        .HasColumnOrder(22);

                    b.Property<string>("Case_Interest_type")
                        .HasColumnType("text")
                        .HasColumnName("Case_Interest_type")
                        .HasColumnOrder(15);

                    b.Property<string>("Case_Manual_Lg")
                        .HasColumnType("text")
                        .HasColumnName("Case_Manual_Lg")
                        .HasColumnOrder(26);

                    b.Property<string>("Case_Montly_Amt")
                        .HasColumnType("text")
                        .HasColumnName("Case_Montly_Amt")
                        .HasColumnOrder(6);

                    b.Property<string>("Case_Payment_By")
                        .HasColumnType("text")
                        .HasColumnName("Case_Payment_By")
                        .HasColumnOrder(12);

                    b.Property<string>("Case_Pending_Amt")
                        .HasColumnType("text")
                        .HasColumnName("Case_Pending_Amt")
                        .HasColumnOrder(24);

                    b.Property<string>("Case_Rate_of_Interest")
                        .HasColumnType("text")
                        .HasColumnName("Case_Rate_of_Interest")
                        .HasColumnOrder(19);

                    b.Property<string>("Case_TOTAL_ADV_REQ")
                        .HasColumnType("text")
                        .HasColumnName("Case_TOTAL_ADV_REQ")
                        .HasColumnOrder(10);

                    b.Property<string>("Case_Total_Amt_Due")
                        .HasColumnType("text")
                        .HasColumnName("Case_Total_Amt_Due")
                        .HasColumnOrder(7);

                    b.Property<string>("Case_Total_Cost")
                        .HasColumnType("text")
                        .HasColumnName("Case_Total_Cost")
                        .HasColumnOrder(8);

                    b.Property<string>("Case_Total_hp")
                        .HasColumnType("text")
                        .HasColumnName("Case_Total_hp")
                        .HasColumnOrder(17);

                    b.Property<string>("Case_X")
                        .HasColumnType("text")
                        .HasColumnName("Case_X")
                        .HasColumnOrder(18);

                    b.Property<DateTime?>("Case_end_Date")
                        .HasColumnType("date")
                        .HasColumnName("Case_end_Date")
                        .HasColumnOrder(25);

                    b.Property<string>("Case_hp")
                        .HasColumnType("text")
                        .HasColumnName("Case_hp")
                        .HasColumnOrder(20);

                    b.Property<string>("case_Duration_Type")
                        .HasColumnType("text")
                        .HasColumnName("case_Duration_Type")
                        .HasColumnOrder(4);

                    b.Property<string>("case_Duration_Value")
                        .HasColumnType("text")
                        .HasColumnName("case_Duration_Value")
                        .HasColumnOrder(3);

                    b.Property<string>("case_financed_item")
                        .HasColumnType("text")
                        .HasColumnName("case_financed_item")
                        .HasColumnOrder(1);

                    b.HasKey("id");

                    b.ToTable("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CompanyDetail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("company_address")
                        .HasColumnType("text")
                        .HasColumnName("company_address")
                        .HasColumnOrder(3);

                    b.Property<string>("company_city")
                        .HasColumnType("text")
                        .HasColumnName("company_city")
                        .HasColumnOrder(4);

                    b.Property<string>("company_country")
                        .HasColumnType("text")
                        .HasColumnName("company_country")
                        .HasColumnOrder(6);

                    b.Property<string>("company_email")
                        .HasColumnType("text")
                        .HasColumnName("company_email")
                        .HasColumnOrder(7);

                    b.Property<string>("company_name")
                        .HasColumnType("text")
                        .HasColumnName("company_name")
                        .HasColumnOrder(2);

                    b.Property<string>("company_phone")
                        .HasColumnType("text")
                        .HasColumnName("company_phone")
                        .HasColumnOrder(8);

                    b.Property<string>("company_pincode")
                        .HasColumnType("text")
                        .HasColumnName("company_pincode")
                        .HasColumnOrder(5);

                    b.HasKey("id");

                    b.ToTable("CompanyDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.EMIDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(6);

                    b.Property<string>("emi_Interest_Amount")
                        .HasColumnType("text")
                        .HasColumnName("emi_Interest_Amount")
                        .HasColumnOrder(3);

                    b.Property<string>("emi_Monthly_Amount")
                        .HasColumnType("text")
                        .HasColumnName("emi_Monthly_Amount")
                        .HasColumnOrder(2);

                    b.Property<string>("emi_Monthly_Interest_Amount")
                        .HasColumnType("text")
                        .HasColumnName("emi_Monthly_Interest_Amount")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("emi_PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("emi_PaymentDate")
                        .HasColumnOrder(1);

                    b.Property<string>("emi_Status")
                        .HasColumnType("text")
                        .HasColumnName("emi_Status")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("EMIDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.ExtraDetail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(21);

                    b.Property<string>("extra_Addhaar_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_Addhaar_No")
                        .HasColumnOrder(14);

                    b.Property<string>("extra_Case_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_Case_No")
                        .HasColumnOrder(17);

                    b.Property<string>("extra_Chassis_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_Chassis_No")
                        .HasColumnOrder(10);

                    b.Property<string>("extra_DL_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_DL_No")
                        .HasColumnOrder(16);

                    b.Property<DateTime?>("extra_Date")
                        .HasColumnType("date")
                        .HasColumnName("extra_Date")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("extra_Date_Taken_By")
                        .HasColumnType("date")
                        .HasColumnName("extra_Date_Taken_By")
                        .HasColumnOrder(20);

                    b.Property<string>("extra_Engine_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_Engine_No")
                        .HasColumnOrder(11);

                    b.Property<string>("extra_Hirer_Name")
                        .HasColumnType("text")
                        .HasColumnName("extra_Hirer_Name")
                        .HasColumnOrder(3);

                    b.Property<string>("extra_Item_Type")
                        .HasColumnType("text")
                        .HasColumnName("extra_Item_Type")
                        .HasColumnOrder(4);

                    b.Property<string>("extra_Manufacturer")
                        .HasColumnType("text")
                        .HasColumnName("extra_Manufacturer")
                        .HasColumnOrder(5);

                    b.Property<string>("extra_Model_Name")
                        .HasColumnType("text")
                        .HasColumnName("extra_Model_Name")
                        .HasColumnOrder(6);

                    b.Property<string>("extra_NOC_Made")
                        .HasColumnType("text")
                        .HasColumnName("extra_NOC_Made")
                        .HasColumnOrder(12);

                    b.Property<string>("extra_Pan_Card_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_Pan_Card_No")
                        .HasColumnOrder(15);

                    b.Property<string>("extra_RC_Given")
                        .HasColumnType("text")
                        .HasColumnName("extra_RC_Given")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("extra_RC_Given_Date")
                        .HasColumnType("date")
                        .HasColumnName("extra_RC_Given_Date")
                        .HasColumnOrder(18);

                    b.Property<string>("extra_RC_Taken_By")
                        .HasColumnType("text")
                        .HasColumnName("extra_RC_Taken_By")
                        .HasColumnOrder(9);

                    b.Property<string>("extra_Registration_No")
                        .HasColumnType("text")
                        .HasColumnName("extra_Registration_No")
                        .HasColumnOrder(2);

                    b.Property<string>("extra_Taken_By")
                        .HasColumnType("text")
                        .HasColumnName("extra_Taken_By")
                        .HasColumnOrder(13);

                    b.Property<string>("extra_Year_of_Registration")
                        .HasColumnType("text")
                        .HasColumnName("extra_Year_of_Registration")
                        .HasColumnOrder(7);

                    b.HasKey("id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("ExtraDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.Guarantor1Detail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(9);

                    b.Property<string>("guarantor1_Company_Name")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_Campany_Name")
                        .HasColumnOrder(6);

                    b.Property<string>("guarantor1_Name")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_Name")
                        .HasColumnOrder(2);

                    b.Property<string>("guarantor1_Off_Address")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_Off_Address")
                        .HasColumnOrder(7);

                    b.Property<string>("guarantor1_Off_Phone_No")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_Off_Phone_No")
                        .HasColumnOrder(8);

                    b.Property<string>("guarantor1_Phones_No")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_Phones_No")
                        .HasColumnOrder(5);

                    b.Property<string>("guarantor1_Resi_Address")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_Resi_Address")
                        .HasColumnOrder(4);

                    b.Property<string>("guarantor1_SWH_Name")
                        .HasColumnType("text")
                        .HasColumnName("guarantor1_SWH_Name")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("Guarantor1Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.Guarantor2Detail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(9);

                    b.Property<string>("guarantor2_Company_Name")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_Campany_Name")
                        .HasColumnOrder(6);

                    b.Property<string>("guarantor2_Name")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_Name")
                        .HasColumnOrder(2);

                    b.Property<string>("guarantor2_Off_Address")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_Off_Address")
                        .HasColumnOrder(7);

                    b.Property<string>("guarantor2_Off_Phone_No")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_Off_Phone_No")
                        .HasColumnOrder(8);

                    b.Property<string>("guarantor2_Phones_No")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_Phones_No")
                        .HasColumnOrder(5);

                    b.Property<string>("guarantor2_Resi_Address")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_Resi_Address")
                        .HasColumnOrder(4);

                    b.Property<string>("guarantor2_SWH_Name")
                        .HasColumnType("text")
                        .HasColumnName("guarantor2_SWH_Name")
                        .HasColumnOrder(3);

                    b.HasKey("id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("Guarantor2Detail");
                });

            modelBuilder.Entity("DB.Login.Tables.HelperDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("company_id")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id")
                        .HasColumnOrder(2);

                    b.Property<string>("imageUrl")
                        .HasColumnType("text")
                        .HasColumnName("image_url")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("company_id");

                    b.ToTable("HelperDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.RecieptDetail", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(30);

                    b.Property<string>("Chq_Bounce")
                        .HasColumnType("text")
                        .HasColumnName("Chq_Bounce")
                        .HasColumnOrder(27);

                    b.Property<string>("receipt_A_c_Close")
                        .HasColumnType("text")
                        .HasColumnName("receipt_A_c_Close")
                        .HasColumnOrder(20);

                    b.Property<decimal?>("receipt_Bank_Chgs_Amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Bank_Chgs_Amt")
                        .HasColumnOrder(16);

                    b.Property<decimal?>("receipt_Bank_Chgs_Amt_Rec")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Bank_Chgs_Amt_Rec")
                        .HasColumnOrder(28);

                    b.Property<string>("receipt_By_Cash_Bank")
                        .HasColumnType("text")
                        .HasColumnName("receipt_By_Cash_Bank")
                        .HasColumnOrder(13);

                    b.Property<string>("receipt_Case_No")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Case_No")
                        .HasColumnOrder(3);

                    b.Property<string>("receipt_Case_Type")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Case_Type")
                        .HasColumnOrder(22);

                    b.Property<string>("receipt_Cheque_No")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Cheque_No")
                        .HasColumnOrder(14);

                    b.Property<string>("receipt_Chq_Deposit")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Chq_Deposit")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("receipt_Close_Date")
                        .HasColumnType("date")
                        .HasColumnName("receipt_Close_Date")
                        .HasColumnOrder(21);

                    b.Property<DateTime?>("receipt_Current_Date")
                        .HasColumnType("date")
                        .HasColumnName("receipt_Current_Date")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("receipt_Deposit_Date")
                        .HasColumnType("date")
                        .HasColumnName("receipt_Deposit_Date")
                        .HasColumnOrder(6);

                    b.Property<decimal?>("receipt_Due_Amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Due_Amt")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("receipt_Due_Date")
                        .HasColumnType("date")
                        .HasColumnName("receipt_Due_Date")
                        .HasColumnOrder(5);

                    b.Property<decimal?>("receipt_Hp1")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Hp1")
                        .HasColumnOrder(24);

                    b.Property<decimal?>("receipt_Hp2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Hp2")
                        .HasColumnOrder(26);

                    b.Property<string>("receipt_Instalment_No")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Instalment_No")
                        .HasColumnOrder(4);

                    b.Property<string>("receipt_Late_Boun_Rec")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Late_Boun_Rec")
                        .HasColumnOrder(29);

                    b.Property<string>("receipt_Late_Bounse")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Late_Bounse")
                        .HasColumnOrder(17);

                    b.Property<long?>("receipt_No_of_Inst_of_Int")
                        .HasColumnType("bigint")
                        .HasColumnName("receipt_No_of_Inst_of_Int")
                        .HasColumnOrder(11);

                    b.Property<string>("receipt_Party_Name")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Party_Name")
                        .HasColumnOrder(9);

                    b.Property<decimal?>("receipt_Pric1")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Pric1")
                        .HasColumnOrder(23);

                    b.Property<decimal?>("receipt_Pric2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Pric2")
                        .HasColumnOrder(25);

                    b.Property<decimal?>("receipt_Rec_Amt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("receipt_Rec_Amt")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("receipt_Receipt_Date")
                        .HasColumnType("date")
                        .HasColumnName("receipt_Receipt_Date")
                        .HasColumnOrder(8);

                    b.Property<string>("receipt_Receipt_No")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Receipt_No")
                        .HasColumnOrder(7);

                    b.Property<string>("receipt_Remark")
                        .HasColumnType("text")
                        .HasColumnName("receipt_Remark")
                        .HasColumnOrder(18);

                    b.Property<string>("receipt_System_Bill_No")
                        .HasColumnType("text")
                        .HasColumnName("receipt_System_Bill_No")
                        .HasColumnOrder(2);

                    b.HasKey("id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("RecieptDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.UploadDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<long?>("Case_Master_id")
                        .HasColumnType("bigint")
                        .HasColumnName("Case_Master_id")
                        .HasColumnOrder(5);

                    b.Property<string>("upload_document_name")
                        .HasColumnType("text")
                        .HasColumnName("upload_document_name")
                        .HasColumnOrder(1);

                    b.Property<string>("upload_document_path")
                        .HasColumnType("text")
                        .HasColumnName("upload_document_path")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Case_Master_id");

                    b.ToTable("UploadDocument");
                });

            modelBuilder.Entity("DB.Login.Tables.CaseHireMaster", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("CaseHireMaster")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.EMIDetail", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("EMIDetail")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.ExtraDetail", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("ExtraDetail")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Guarantor1Detail", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("Guarantor1Detail")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.Guarantor2Detail", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("Guarantor2Detail")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.HelperDetail", b =>
                {
                    b.HasOne("DB.Login.Tables.CompanyDetail", "CompanyDetail")
                        .WithMany("HelperDetail")
                        .HasForeignKey("company_id");

                    b.Navigation("CompanyDetail");
                });

            modelBuilder.Entity("DB.Login.Tables.RecieptDetail", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("RecieptDetail")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.UploadDocument", b =>
                {
                    b.HasOne("DB.Login.Tables.CaseMaster", "CaseMaster")
                        .WithMany("UploadDocument")
                        .HasForeignKey("Case_Master_id");

                    b.Navigation("CaseMaster");
                });

            modelBuilder.Entity("DB.Login.Tables.CaseMaster", b =>
                {
                    b.Navigation("CaseHireMaster");

                    b.Navigation("EMIDetail");

                    b.Navigation("ExtraDetail");

                    b.Navigation("Guarantor1Detail");

                    b.Navigation("Guarantor2Detail");

                    b.Navigation("RecieptDetail");

                    b.Navigation("UploadDocument");
                });

            modelBuilder.Entity("DB.Login.Tables.CompanyDetail", b =>
                {
                    b.Navigation("HelperDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
